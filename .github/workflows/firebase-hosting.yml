name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 3. Mise en cache du registre npm pour accélérer
      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Debug : lister tous les fichiers pour vérifier le lockfile
      - name: Debug workspace
        run: |
          echo "=== Current directory ==="
          pwd
          echo ""
          echo "=== Listing all files ==="
          ls -R .

      # 5. Debug : version de Node/NPM
      - name: Debug Node & npm versions
        run: |
          echo "Node version:" && node -v
          echo "npm version:" && npm -v

      # 6. Install dependencies (avec fallback)
      - name: Install dependencies
        run: |
          # Essai reproductible, tout échoue si lockfile manquant ou désynchro :
          npm ci --legacy-peer-deps || \
          # Sinon on retombe sur npm install pour voir si ça passe
          npm install

      # 7. Build de l’application Angular
      - name: Build Angular app
        run: npm run build -- --configuration production

      # 8. Déploiement sur Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: live
          projectId: ton-project-id
